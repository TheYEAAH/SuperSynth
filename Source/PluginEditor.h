/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin editor.

  ==============================================================================
*/
#pragma once
#include "../JuceLibraryCode/JuceHeader.h"
#include "PluginProcessor.h"
#include "Components/OscillatorComponent.h"
#include "Components/FilterComponent.h"
#include "Components/OtherLookAndFeel.h"
#include "Components/ModulationMatrixComponent.h"
//==============================================================================
/** Class that acts as the GUI for the SimpleSuperSynthAudioProcessor.
*/

class SuperSynthAudioProcessorEditor  : public AudioProcessorEditor
{
public:
    enum
    {
        paramControlHeight = 64,
        paramLabelHeight   = 12,
        paramLabelWidth    = 52,
        paramSliderWidth   = 52,
        paramSliderHeight  = 52
    };

    typedef AudioProcessorValueTreeState::SliderAttachment SliderAttachment;
    typedef AudioProcessorValueTreeState::ButtonAttachment ButtonAttachment;
    
    /** Creates a SuperSynthAudioProcessorEditor. */
    SuperSynthAudioProcessorEditor (AudioProcessor& parent, AudioProcessorValueTreeState& vts);

    ~SuperSynthAudioProcessorEditor();
    
    /** Implementation of the AudioProcessorEditor method. */
    void resized() override;
    
    /** Implementation of the AudioProcessorEditor method. */
    void paint (Graphics& g) override;
    

    
private:
    OtherLookAndFeel otherLookAndFeel;
    AudioProcessorValueTreeState& valueTreeState; 
    ScopedPointer<OscillatorComponent> oscillator;
    ScopedPointer<ModulationMatrixComponent> modulationMatrix;
    ScopedPointer<FilterComponent> filter;
    MidiKeyboardState keyboardState;
    MidiKeyboardComponent keyboardComponent;

};
